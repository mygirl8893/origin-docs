<h1 id='listing'>Listing</h1>
<p>A listing is an offer from a seller to sell something.</p>

<p>It is active until there are no more units available or its expiration date is reached.</p>
<h2 id='listing-get'>get</h2>
<blockquote>
<p>To get a listing by address</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">listingAddress</span> <span class="o">=</span> <span class="s2">"0x061b8d5f9e432e6b23d79fac02e5792eb8746ce5"</span>
<span class="kr">const</span> <span class="nx">listing</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">listings</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">listingAddress</span><span class="p">)</span>
<span class="c1">// Returns </span>
<span class="p">{</span>
  <span class="nl">name</span><span class="p">:</span> <span class="s2">"Kettlebell For Sale"</span><span class="p">,</span>
  <span class="nx">category</span><span class="p">:</span> <span class="s2">"Health and Beauty"</span><span class="p">,</span>
  <span class="nx">description</span><span class="p">:</span> <span class="s2">"32kg gorilla kettlebell"</span><span class="p">,</span>
  <span class="nx">location</span><span class="p">:</span> <span class="s2">"San Francisco, CA"</span><span class="p">,</span>
  <span class="nx">pictures</span><span class="p">:</span> <span class="p">[],</span>

  <span class="nx">address</span><span class="p">:</span> <span class="s2">"0x061b8d5f9e432e6b23d79fac02e5792eb8746ce5"</span><span class="p">,</span>
  <span class="nx">ipfsHash</span><span class="p">:</span> <span class="s2">"QmWZDcDq4aYGx9XmkPcx4mnKaGW2jCxf5tknrCtbfpJJFf"</span><span class="p">,</span>
  <span class="nx">sellerAddress</span><span class="p">:</span> <span class="s2">"0x627306090abab3a6e1400e9345bc60c78a8bef57"</span><span class="p">,</span>
  <span class="nx">priceWei</span><span class="p">:</span> <span class="s2">"1000000000000000000"</span><span class="p">,</span>
  <span class="nx">price</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>  <span class="c1">// deprecated</span>
  <span class="nx">unitsAvailable</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="nx">created</span><span class="p">:</span> <span class="mi">1524490159</span><span class="p">,</span>
  <span class="nx">expiration</span><span class="p">:</span> <span class="mi">1529674159</span><span class="p">,</span>
<span class="p">}</span>
</code></pre>
<p>This will return information about the listing, combining information from IPFS and the blockchain. In the future, fields returned may differ based on the listing&#39;s schema.</p>

<p data-height="440" data-theme-id="dark" data-slug-hash="vrzqYo" data-default-tab="js,result" data-user="originprotocol" data-embed-version="2" data-pen-title="Origin.js: Get Listing" class="codepen">See the Pen <a href="https://codepen.io/originprotocol/pen/vrzqYo/">Origin.js: Get Listing</a> by Origin Protocol (<a href="https://codepen.io/originprotocol">@originprotocol</a>) on <a href="https://codepen.io">CodePen</a>.</p>
<h2 id='listing-getbyindex'>getByIndex</h2>
<blockquote>
<p>To get a listing by index position</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">listing</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">listings</span><span class="p">.</span><span class="nx">getByIndex</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="c1">// Returns </span>
<span class="p">{</span>
  <span class="nl">name</span><span class="p">:</span> <span class="s2">"Kettlebell For Sale"</span><span class="p">,</span>
  <span class="nx">category</span><span class="p">:</span> <span class="s2">"Health and Beauty"</span><span class="p">,</span>
  <span class="nx">description</span><span class="p">:</span> <span class="s2">"32kg gorilla kettlebell"</span><span class="p">,</span>
  <span class="nx">location</span><span class="p">:</span> <span class="s2">"San Francisco, CA"</span><span class="p">,</span>
  <span class="nx">pictures</span><span class="p">:</span> <span class="p">[],</span>

  <span class="nx">address</span><span class="p">:</span> <span class="s2">"659cbb0e2411a44db63778987b1e22153c086a95eb6b18bdf89de078917abc63"</span><span class="p">,</span>
  <span class="nx">index</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="nx">ipfsHash</span><span class="p">:</span> <span class="s2">"QmWZDcDq4aYGx9XmkPcx4mnKaGW2jCxf5tknrCtbfpJJFf"</span><span class="p">,</span>
  <span class="nx">sellerAddress</span><span class="p">:</span> <span class="s2">"0f62d96d6675f32685bbdb8ac13cda7c23436f63efbb9d07700d8669ff12b7c4"</span><span class="p">,</span>
  <span class="nx">price</span><span class="p">:</span> <span class="mf">0.004</span><span class="p">,</span>
  <span class="nx">unitsAvailable</span><span class="p">:</span> <span class="mi">1</span>
<span class="p">}</span>
</code></pre>
<p><strong>This method is deprecated</strong>, and will be removed soon.  Use <code>get</code> instead.</p>

<p>This will return information about the listing, combining information from IPFS and the blockchain. In the future, fields returned may differ based on the listing&#39;s schema.</p>

<p data-height="420" data-theme-id="dark" data-slug-hash="VdGJwO" data-default-tab="js,result" data-user="originprotocol" data-embed-version="2" data-pen-title="Origin.js: Get Listing By Index" class="codepen">See the Pen <a href="https://codepen.io/originprotocol/pen/VdGJwO/">Origin.js: Get Listing By Index</a> by Origin Protocol (<a href="https://codepen.io/originprotocol">@originprotocol</a>) on <a href="https://codepen.io">CodePen</a>.</p>
<h2 id='listing-create'>create</h2>
<blockquote>
<p>To create a listing</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">listingData</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="s2">"Kettlebell For Sale"</span><span class="p">,</span>
  <span class="na">category</span><span class="p">:</span> <span class="s2">"Health and Beauty"</span><span class="p">,</span>
  <span class="na">location</span><span class="p">:</span> <span class="s2">"San Francisco, CA"</span><span class="p">,</span>
  <span class="na">description</span><span class="p">:</span>
    <span class="s2">"32kg gorilla kettlebell"</span><span class="p">,</span>
  <span class="na">pictures</span><span class="p">:</span> <span class="p">[],</span>
  <span class="na">price</span><span class="p">:</span> <span class="mf">3.3</span>
<span class="p">}</span>
<span class="kr">const</span> <span class="nx">schema</span> <span class="o">=</span> <span class="s2">"for-sale"</span>
<span class="kr">const</span> <span class="nx">transaction</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">listings</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">listingData</span><span class="p">,</span> <span class="nx">schema</span><span class="p">)</span>
<span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">contractService</span><span class="p">.</span><span class="nx">waitTransactionFinished</span><span class="p">(</span><span class="nx">transaction</span><span class="p">.</span><span class="nx">tx</span><span class="p">)</span>
</code></pre>
<p>When you create a listing, the API will create both the IPFS data and the Listing contract on the blockchain.</p>

<p>The fields used come from the listing schema definition used.</p>

<p>The wallet used to create the listing is used as the seller.</p>

<p>A listing will expire 60 days after its expiration date.</p>

<p data-height="780" data-theme-id="dark" data-slug-hash="oyPrNV" data-default-tab="js,result" data-user="originprotocol" data-embed-version="2" data-pen-title="Origin.js: Create Listing" class="codepen">See the Pen <a href="https://codepen.io/originprotocol/pen/oyPrNV/">Origin.js: Create Listing</a> by Origin Protocol (<a href="https://codepen.io/originprotocol">@originprotocol</a>) on <a href="https://codepen.io">CodePen</a>.</p>
<h2 id='listing-buy'>buy</h2>
<blockquote>
<p>To buy a listing</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">unitstoBuy</span> <span class="o">=</span> <span class="mi">2</span>
<span class="kr">const</span> <span class="nx">amountToSend</span> <span class="o">=</span> <span class="nx">listing</span><span class="p">.</span><span class="nx">price</span> <span class="o">*</span> <span class="nx">unitstoBuy</span>
<span class="kr">const</span> <span class="nx">transaction</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">listings</span><span class="p">.</span><span class="nx">buy</span><span class="p">(</span>
      <span class="nx">listing</span><span class="p">.</span><span class="nx">address</span><span class="p">,</span>
      <span class="nx">unitstoBuy</span><span class="p">,</span>
      <span class="nx">amountToSend</span>
    <span class="p">)</span>
<span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">contractService</span><span class="p">.</span><span class="nx">waitTransactionFinished</span><span class="p">(</span><span class="nx">transaction</span><span class="p">.</span><span class="nx">tx</span><span class="p">)</span>
</code></pre>
<p>Buy will create a new <code>Purchase</code> contract on the blockchain. This purchase contract will handle the rest of the transaction between the buyer and the seller.</p>
<h2 id='listing-close'>close</h2>
<blockquote>
<p>To close a listing</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">transaction</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">listings</span><span class="p">.</span><span class="nx">close</span><span class="p">(</span>
      <span class="nx">listing</span><span class="p">.</span><span class="nx">address</span>
    <span class="p">)</span>
<span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">contractService</span><span class="p">.</span><span class="nx">waitTransactionFinished</span><span class="p">(</span><span class="nx">transaction</span><span class="p">.</span><span class="nx">tx</span><span class="p">)</span>
</code></pre>
<p>This method is <strong>called by the seller</strong>.</p>

<p>Closing a transaction will set the unitsAvailable to zero. This will stop any further purchases of that Listing.</p>
<h2 id='listing-allids'>allIds</h2>
<blockquote>
<p>To find all listing indexes</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">indexes</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">listings</span><span class="p">.</span><span class="nx">allIds</span><span class="p">()</span>
<span class="c1">// Returns </span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,...]</span>
</code></pre>
<p>You can get a simple list of all listing indexes in the registry, which will allow you to loop through fetch information about each Listing.</p>
<h2 id='listing-purchaseslength'>purchasesLength</h2>
<blockquote>
<p>To find the number of purchases for a listing</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">listingAddress</span> <span class="o">=</span> <span class="s2">"0xbe3a878bfc1e1527858756c062fbfe0db069c459"</span>
<span class="kr">const</span> <span class="nx">length</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">listings</span><span class="p">.</span><span class="nx">purchasesLength</span><span class="p">(</span><span class="nx">listingAddress</span><span class="p">)</span>
<span class="c1">// Returns </span>
<span class="mi">4</span>
</code></pre>
<p>This will return the number of purchases that have occurred for a given listing address.</p>
<h2 id='listing-purchaseaddressbyindex'>purchaseAddressByIndex</h2>
<blockquote>
<p>To find a purchase address for a listing</p>
</blockquote>
<pre class="highlight javascript tab-javascript"><code><span class="kr">const</span> <span class="nx">listingAddress</span> <span class="o">=</span> <span class="s2">"0xbe3a878bfc1e1527858756c062fbfe0db069c459"</span>
<span class="nx">await</span> <span class="nx">origin</span><span class="p">.</span><span class="nx">listings</span><span class="p">.</span><span class="nx">purchaseAddressByIndex</span><span class="p">(</span><span class="nx">listingAddress</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="c1">// Returns </span>
<span class="s2">"0x9deee0195f88caf7dee2fa8a6777f8236d847ef8"</span>
</code></pre>
<p>For listings that have one or more purchases, you can get the purchase address at a given index position.</p>
